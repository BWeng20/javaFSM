/**
 * Build Script for variant with all features and debugging turned on.
 * The source needs to be re-compiled with different flags for each variant.
 * The compile-time flags are defined in interface "StaticSettings" which is generated from a template.
 * The template is configured with "StaticOptionsConfig" below.
 */

plugins {
    id 'java'
}

dependencies {
    implementation 'org.graalvm.sdk:graal-sdk:22.3.0'
    implementation 'org.graalvm.js:js:22.3.0'

    implementation "org.apache.thrift:libthrift:${thriftVersion}"

    // Needed by thrift
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2'

    compileOnly 'org.jetbrains:annotations:26.0.2'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'net.sf.saxon:Saxon-HE:12.8'
}

ext.'StaticOptionsConfig' =
        [
                'Debug' :
                        [
                                'On' : true,
                                'Serializer': true,
                                'Reader': true
                        ],
                'Trace' :
                        [
                                'On' : true,
                                'Method': true,
                                'Event': true,
                                'State': true,
                                'Script': true
                        ],
                'Datamodels':
                        [
                                'ecma' : true
                        ]
        ]


tasks.register('w3cTest', JavaExec) {
    group = 'verification'
    description = 'Starts the w3c test'

    mainClass = 'com.bw.fsm.W3CTest'

    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    println 'class path '+classpath.asPath

    // jvmArgs = ['-Xmx512m']
    args = [layout.projectDirectory.asFile.absolutePath + '/../w3ctest', "-report", layout.projectDirectory.asFile.absolutePath + "/../W3C_TEST_REPORT.MD", "-parallel", "-logOnlyFailure"]
}

tasks.register('w3cTestWithOptionals', JavaExec) {
    group = 'verification'
    description = 'Starts the w3c test, including optional tests'

    mainClass = 'com.bw.fsm.W3CTest'

    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath

    // jvmArgs = ['-Xmx512m']
    args = [layout.projectDirectory.asFile.absolutePath + '/w3ctest', "-report", layout.projectDirectory.asFile.absolutePath + "/W3C_TEST_REPORT.MD", "-parallel", "-logOnlyFailure", "-optionals"]
}
