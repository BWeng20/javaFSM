plugins {
    id 'java'
}

group = 'io.github.bweng20'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    thriftVersion = '0.22.0'
    thriftSourceDir = 'src/main/thrift'
    thriftOutputDir = 'build/generated-sources/java'
}

sourceSets {
    examples {
        java {
            srcDir 'src/examples/java'
        }
        resources {
            srcDir 'src/examples/resources'
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        runtimeClasspath += configurations.runtimeClasspath

    }
    main {
        java {
            srcDir thriftOutputDir
        }
    }
}


dependencies {
    implementation 'org.graalvm.sdk:graal-sdk:22.3.0'
    implementation 'org.graalvm.js:js:22.3.0'

    implementation "org.apache.thrift:libthrift:${thriftVersion}"

    // Needed by thrift
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    compileOnly 'org.jetbrains:annotations:26.0.2'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'net.sf.saxon:Saxon-HE:12.8'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2'
}

tasks.register('generateThrift') {

    inputs.dir thriftSourceDir
    outputs.dir thriftOutputDir

    doLast {
        file(thriftOutputDir).mkdirs()

        def thriftExecutable
        def compilerDir = layout.projectDirectory.dir("thrift")
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            thriftExecutable = compilerDir.file( "thrift-${thriftVersion}.exe").getAsFile().absolutePath
        } else {
            thriftExecutable = compilerDir.file( "thrift-${thriftVersion}").getAsFile().absolutePath
        }

        fileTree(thriftSourceDir) {
            include '**/*.thrift'
        }.each { thriftFile ->
            println "Compiling Thrift: ${thriftFile.name} with ${thriftExecutable}"

            project.exec {
                workingDir layout.projectDirectory
                commandLine thriftExecutable, '--gen', 'java:generated_annotations=suppress', '-out', thriftOutputDir, '-I', thriftSourceDir, thriftFile
            }
        }
    }
}

processExamplesResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

tasks.register('w3cTest', JavaExec) {
    group = 'verification'
    description = 'Starts the w3c test'

    mainClass = 'com.bw.fsm.W3CTest'

    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath

    // jvmArgs = ['-Xmx512m']
    args = [layout.projectDirectory.asFile.absolutePath + '/w3ctest', "-report", layout.projectDirectory.asFile.absolutePath+ "/W3C_TEST_REPORT.MD", "-parallel", "-logOnlyFailure"]
}

tasks.register('w3cTestWithOptionals', JavaExec) {
    group = 'verification'
    description = 'Starts the w3c test, including optional tests'

    mainClass = 'com.bw.fsm.W3CTest'

    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath

    // jvmArgs = ['-Xmx512m']
    args = [layout.projectDirectory.asFile.absolutePath + '/w3ctest', "-report", layout.projectDirectory.asFile.absolutePath+ "/W3C_TEST_REPORT.MD", "-parallel", "-logOnlyFailure", "-optionals"]
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')
javadoc.options.addStringOption('stylesheetfile', 'doc/javadoc.css')

tasks.named('compileJava') {
    dependsOn(tasks.named('generateThrift'))
}